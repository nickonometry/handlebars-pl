<style>
      /* initialize it off screen. */
      .loading .example .mdc-snackbar { transform: translateY(200%); }

      .mdc-theme--dark {
        background-color: #333;
      }

      .mdc-theme--dark .hero {
        background-color: #2d2d2d;
      }

      /* Override style for hero example. */
      .hero .mdc-snackbar {
        position: relative;
        left: auto;
      }
      .hero .mdc-snackbar--active {
        transform: none;
      }

      .field {
        padding-top: 8px;
        padding-bottom: 8px;
      }

      .demo-activate-button {
        margin-top: 14px;
      }

    </style>
    <main>
      <section class="hero">
        <div class="mdc-snackbar mdc-snackbar--active"
             aria-live="assertive"
             aria-atomic="true"
             aria-hidden="true">
          <div class="mdc-snackbar__text">Message sent</div>
          <div class="mdc-snackbar__action-wrapper">
            <button type="button" class="mdc-button mdc-snackbar__action-button">Undo</button>
          </div>
        </div>
      </section>


      <section class="example">
        <h2 class="mdc-typography--title">Basic Example</h2>

        <div class="mdc-form-field">
          <div class="mdc-checkbox">
            <input type="checkbox" class="mdc-checkbox__native-control" id="multiline" aria-labelledby="multiline-label" />
            <div class="mdc-checkbox__background">
              <svg class="mdc-checkbox__checkmark" viewBox="0 0 24 24">
                <path class="mdc-checkbox__checkmark__path" fill="none" stroke="white" d="M1.73,12.91 8.1,19.28 22.79,4.59" />
              </svg>
              <div class="mdc-checkbox__mixedmark"></div>
            </div>
          </div>
          <label for="multiline" id="multiline-label">Multiline</label>
        </div>
        <br/>

        <div class="mdc-form-field">
          <div class="mdc-checkbox" id="action-on-bottom-checkbox">
            <input type="checkbox" class="mdc-checkbox__native-control" id="action-on-bottom" aria-labelledby="action-on-bottom-label" />
            <div class="mdc-checkbox__background">
                <svg class="mdc-checkbox__checkmark" viewBox="0 0 24 24">
                  <path class="mdc-checkbox__checkmark__path" fill="none" stroke="white"
                      d="M1.73,12.91 8.1,19.28 22.79,4.59"/>
                </svg>
              <div class="mdc-checkbox__mixedmark"></div>
            </div>
          </div>
          <label for="action-on-bottom" id="action-on-bottom-label">Action On Bottom</label>
        </div>
        <br/>

        <div class="mdc-form-field">
            <div class="mdc-checkbox">
              <input type="checkbox" checked class="mdc-checkbox__native-control" id="dismiss-on-action" aria-labelledby="dismiss-on-action-label" />
              <div class="mdc-checkbox__background">
                <svg class="mdc-checkbox__checkmark" viewBox="0 0 24 24">
                  <path class="mdc-checkbox__checkmark__path" fill="none" stroke="white"
                        d="M1.73,12.91 8.1,19.28 22.79,4.59"/>
                </svg>
              <div class="mdc-checkbox__mixedmark"></div>
            </div>
          </div>
          <label for="dismiss-on-action" id="dismiss-on-action-label">Dismiss On Action</label>
        </div>
        <br/>



        <div class="mdc-textfield">
          <input type="text" id="message" class="mdc-textfield__input" value="Message deleted">
          <label class="mdc-textfield__label" for="message">Message Text</label>
        </div>
        <br/>

        <div class="mdc-textfield">
          <input type="text" id="action" class="mdc-textfield__input" value="Undo">
          <label class="mdc-textfield__label" for="action">Action Text</label>
        </div>
        <br/>

        <button type="button" class="demo-activate-button mdc-button mdc-button--raised mdc-button--secondary" id="show-snackbar">Show</button>
        <button type="button" class="demo-activate-button mdc-button mdc-button--raised mdc-button--secondary" id="show-rtl-snackbar">Show RTL</button>
        <button type="button" class="demo-activate-button mdc-button mdc-button--raised mdc-button--secondary" id="show-start-aligned-snackbar">Show Start Aligned</button>
        <button type="button" class="demo-activate-button mdc-button mdc-button--raised mdc-button--secondary" id="show-start-aligned-rtl-snackbar">Show Start Aligned (RTL)</button>

          <div id="mdc-js-snackbar"
               class="mdc-snackbar demo-hidden"
               aria-live="assertive"
               aria-atomic="true"
               aria-hidden="true">
            <div class="mdc-snackbar__text"></div>
            <div class="mdc-snackbar__action-wrapper">
              <button type="button" class="mdc-button mdc-snackbar__action-button"></button>
            </div>
          </div>
          <div dir="rtl">
            <div id="mdc-rtl-js-snackbar"
                 class="mdc-snackbar demo-hidden"
                 aria-live="assertive"
                 aria-atomic="true"
                 aria-hidden="true">
              <div class="mdc-snackbar__text"></div>
              <div class="mdc-snackbar__action-wrapper">
                <button type="button" class="mdc-button mdc-snackbar__action-button"></button>
              </div>
            </div>
          </div>
          <div id="mdc-align-start-js-snackbar"
               class="mdc-snackbar mdc-snackbar--align-start demo-hidden"
               aria-live="assertive"
               aria-atomic="true"
               aria-hidden="true">
            <div class="mdc-snackbar__text"></div>
            <div class="mdc-snackbar__action-wrapper">
              <button type="button" class="mdc-button mdc-snackbar__action-button"></button>
            </div>
          </div>
          <div dir="rtl">
            <div id="mdc-align-start-rtl-js-snackbar"
                 class="mdc-snackbar mdc-snackbar--align-start demo-hidden"
                 aria-live="assertive"
                 aria-atomic="true"
                 aria-hidden="true">
              <div class="mdc-snackbar__text"></div>
              <div class="mdc-snackbar__action-wrapper">
                <button type="button" class="mdc-button mdc-snackbar__action-button"></button>
              </div>
            </div>
          </div>
        </div>
      </section>
    </main>
    <script src="https://unpkg.com/material-components-web@latest/dist/material-components-web.min.js"></script>
    <script>
      (function(global) {
        'use strict';
        var MDCSnackbar = global.mdc.snackbar.MDCSnackbar;
        var snackbar = new MDCSnackbar(document.getElementById('mdc-js-snackbar'));
        var rtlSnackbar = new MDCSnackbar(document.getElementById('mdc-rtl-js-snackbar'));
        var alignStartSnackbar = new MDCSnackbar(document.getElementById('mdc-align-start-js-snackbar'));
        var alignStartRTLSnackbar = new MDCSnackbar(document.getElementById('mdc-align-start-rtl-js-snackbar'));
        var messageInput = document.getElementById('message');
        var actionInput = document.getElementById('action');
        var multilineInput = document.getElementById('multiline');
        var actionOnBottomInput = document.getElementById('action-on-bottom');
        var actionOnBottomCheckbox = document.getElementById('action-on-bottom-checkbox');
        var dismissOnActionInput = document.getElementById('dismiss-on-action');
        var textFields = document.querySelectorAll('.mdc-textfield');

        // Since Action on Bottom cannot be checked if Multi-line Input
        // is not, we start with a disabled Action on Bottom option
        actionOnBottomCheckbox.classList.add('mdc-checkbox--disabled');
        actionOnBottomInput.disabled = true;
        actionOnBottomInput.checked = false;

        var show = function(sb) {
          snackbar.dismissesOnAction = dismissOnActionInput.checked;
          var data =  {
            message: messageInput.value,
            actionOnBottom: actionOnBottomInput.checked,
            multiline: multilineInput.checked,
            timeout: 2750
          };

          if (actionInput.value) {
            data.actionText = actionInput.value;
            data.actionHandler = function() {
              console.log(data);
            }
          }

          sb.show(data);
        };

        multilineInput.addEventListener('click', function () {
          if (!multilineInput.checked) {
            actionOnBottomCheckbox.classList.add('mdc-checkbox--disabled');
            actionOnBottomInput.disabled = true;
            actionOnBottomInput.checked = false;
          } else {
            actionOnBottomCheckbox.classList.remove('mdc-checkbox--disabled');
            actionOnBottomInput.disabled = false;
          }
        });

        document.getElementById('show-snackbar').addEventListener('click', function() {
          show(snackbar);
        });

        document.getElementById('show-rtl-snackbar').addEventListener('click', function() {
          show(rtlSnackbar);
        });

        document.getElementById('show-start-aligned-snackbar').addEventListener('click', function() {
          show(alignStartSnackbar);
        });

        document.getElementById('show-start-aligned-rtl-snackbar').addEventListener('click', function() {
          show(alignStartRTLSnackbar);
        });

        textFields.forEach(function(tf) {
          mdc.textfield.MDCTextfield.attachTo(tf);
        })

      
      })(this);
    </script>